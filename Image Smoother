class Solution {
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        
        int m=img.size();
        int n=img[0].size();
        vector<int>temp(n);
        int prevCounter=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                int sum=0;
                int c=0;
                //button
                if(i+1<m){
                    if(j-1>=0){
                        sum+=img[i+1][j-1];
                        c++;
                    }
                    sum+=img[i+1][j];
                    c++;
                    if(j+1<n){
                        sum+=img[i+1][j+1];
                        c++;
                    }
                }
                //just right
                if(j+1<n){
                    sum+=img[i][j+1];
                    c++;
                }
                //just left 
                if(j-1>=0){
                    sum+=temp[j-1];
                    c++;
                }
                //curr
                sum+=img[i][j];
                c++;
                
                //top ngbr
                if(i-1>=0){
                    //prev corner i-1, j-1
                    if(j-1>=0) {
                        sum+=prevCounter;
                        c++;
                    }
                    sum+=temp[j];
                    c++;
                    if(j+1<n){
                        sum+=temp[j+1];
                        c++;
                    }
                    
                }
                if(i-1>=0)
                prevCounter = temp[j];
                temp[j]=img[i][j];
                img[i][j] = sum/c++;
            }
        } 
     return img;   
    }
};
